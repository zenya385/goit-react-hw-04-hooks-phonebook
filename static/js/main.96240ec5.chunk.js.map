{"version":3,"sources":["components/App.module.css","components/dataInput/DataInput.module.css","components/dataInput/DataInput.js","components/contacts/contactItem/ContactItem.js","components/contacts/Contacts.js","components/section/Section.js","components/filter/Filter.js","components/App.js","index.js","components/contacts/Contacts.module.css","components/section/Section.module.css","components/filter/Filter.module.css"],"names":["module","exports","DataInput","state","name","number","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","isContactExist","alert","addUser","id","shortid","generate","reset","className","style","form","onSubmit","this","type","pattern","title","required","onChange","btn","Component","ContactItem","user","removeUser","s","item","button","onClick","Contacts","filterInputHandler","map","Section","children","section","toUpperCase","Filter","filter","setFilter","label","input","App","useState","JSON","parse","localStorage","getItem","contacts","setContacts","useEffect","length","setItem","stringify","app","prev","some","toLowerCase","users","includes","contact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96240ec5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3blQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"DataInput_form__9F2U3\",\"number\":\"DataInput_number__3iy3e\",\"name\":\"DataInput_name__jhL53 DataInput_number__3iy3e\",\"btn\":\"DataInput_btn__14i7W\"};","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\nimport style from \"./DataInput.module.css\";\nimport shortid from 'shortid';\n\nclass DataInput extends Component {\n    state = {\n        name: '',\n        number: '',\n    }\n\n    onHandleChange = (e) => {\n        const {value, name} = e.target;\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    onHandleSubmit = (e) => {\n        e.preventDefault();\n\n        if (this.props.isContactExist(this.state.name)) {\n            alert(`${this.state.name} is already in contacts.`);\n            return;\n        }\n\n        this.props.addUser({\n            name: this.state.name,\n            number: this.state.number,\n            id: shortid.generate(),\n        })\n\n        this.reset();\n    }\n\n    reset = () => {\n        this.setState({\n            name: '',\n            number: '',\n        })\n    }\n\n    render() {\n        return (\n            <form className={style.form} onSubmit={this.onHandleSubmit}>\n                <label>\n                    Name:\n                    <input\n                        type=\"text\"\n                        name=\"name\"\n                        className={style.name}\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                        required\n                        onChange={this.onHandleChange}\n                        value={this.state.name}\n                    />\n                </label>\n                <label>\n                    Number:\n                    <input\n                        type=\"tel\"\n                        name=\"number\"\n                        className={style.number}\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                        required\n                        onChange={this.onHandleChange}\n                        value={this.state.number}\n                    />\n                </label>\n                <button type=\"submit\" className={style.btn}>Add contact</button>\n            </form>\n        )\n    }\n}\n\nDataInput.propTypes = {\n    addUser: PropTypes.func.isRequired,\n}\n\nexport default DataInput;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport s from \"../Contacts.module.css\";\n\nconst ContactItem = ({user, removeUser}) => {\n    const remove = () => removeUser(user.id);\n\n    return (\n        <li className={s.item}><span>{user.name}: </span>{user.number}\n            <button type=\"button\" className={s.button} onClick={remove}>Delete</button>\n        </li>\n    )\n}\n\nContactItem.propTypes = {\n    user: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }),\n}\n\nexport default ContactItem;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport ContactItem from \"./contactItem/ContactItem\";\n\nconst Contacts = ({filterInputHandler, removeUser}) => {\n\n    return (\n        <ul>\n            {filterInputHandler.map(user => (\n                <ContactItem user={user} key={user.id} removeUser={removeUser}/>\n            ))}\n        </ul>\n    );\n}\n\nContacts.propTypes = {\n    filterInputHandler: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.string.isRequired,\n    })),\n    removeUser: PropTypes.func.isRequired,\n}\n\n\nexport default Contacts;","import React from \"react\";\nimport style from \"./Section.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Section = ({ children, title }) => {\n  return (\n    <div className={style.section}>\n      <h2 className={style.title}>{title.toUpperCase()}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport style from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, setFilter }) => {\r\n  return (\r\n    <>\r\n      <label className={style.label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          className={style.input}\r\n          onChange={setFilter}\r\n          value={filter}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  setFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport style from \"./App.module.css\";\r\nimport DataInput from \"./dataInput/DataInput\";\r\nimport Contacts from \"./contacts/Contacts\";\r\nimport Section from \"./section/Section\";\r\nimport Filter from \"./filter/Filter\";\r\n\r\nconst App = () => {\r\n  const [contacts, setContacts] = useState(() => {\r\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\r\n  });\r\n\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (contacts.length > 0) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }, [contacts]);\r\n\r\n  const isContactExist = (name) =>\r\n    contacts.some((item) => item.name.toLowerCase() === name.toLowerCase());\r\n\r\n  const filterInputHandler = () =>\r\n    contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n\r\n  const filterValue = (e) => setFilter(e.target.value);\r\n\r\n  const addUser = (user) => {\r\n    setContacts((prev) => {\r\n      return [...prev, user];\r\n    });\r\n  };\r\n\r\n  const removeUser = (id) => {\r\n    setContacts((prev) => [...prev.filter((contact) => contact.id !== id)]);\r\n  };\r\n\r\n  return (\r\n    <div className={style.app}>\r\n      <Section title=\"Phonebook\">\r\n        <DataInput addUser={addUser} isContactExist={isContactExist} />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter filter={filter} setFilter={filterValue} />\r\n        <Contacts\r\n          users={contacts}\r\n          filterInputHandler={filterInputHandler()}\r\n          removeUser={removeUser}\r\n        />\r\n      </Section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contacts_item__UaaL8\",\"button\":\"Contacts_button__2G5Q7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3E6tt\",\"title\":\"Section_title__1dfFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2jxEy\",\"label\":\"Filter_label__zL-KF\"};"],"sourceRoot":""}